import unittest
from tcrdist import olga
import parasail
import pandas as pd
import numpy as np
from tcrdist import pgen

human_b = pd.DataFrame({'v_b_gene': {0: 'TRBV7-7',  1: 'TRBV7-3',  2: 'TRBV4-2',  3: 'TRBV20-1',  4: 'TRBV5-4',  5: 'TRBV20-1',  6: 'TRBV10-2',  7: 'TRBV5-1',  8: 'TRBV5-1',  9: 'TRBV6-2',  10: 'TRBV9',  11: 'TRBV27',  12: 'TRBV10-1',  13: 'TRBV30',  14: 'TRBV6-5',  15: 'TRBV20-1',  16: 'TRBV10-1',  17: 'TRBV18',  18: 'TRBV6-1',  19: 'TRBV19',  20: 'TRBV13',  21: 'TRBV4-1',  22: 'TRBV11-2',  23: 'TRBV5-6',  24: 'TRBV5-4',  25: 'TRBV7-4',  26: 'TRBV19',  27: 'TRBV5-1',  28: 'TRBV6-1',  29: 'TRBV7-9',  30: 'TRBV7-6',  31: 'TRBV9',  32: 'TRBV6-2',  33: 'TRBV27',  34: 'TRBV6-3',  35: 'TRBV24-1',  36: 'TRBV5-1',  37: 'TRBV24-1',  38: 'TRBV29-1',  39: 'TRBV29-1',  40: 'TRBV20-1',  41: 'TRBV7-9',  42: 'TRBV28',  43: 'TRBV10-1',  44: 'TRBV27',  45: 'TRBV7-9',  46: 'TRBV3-1',  47: 'TRBV9',  48: 'TRBV20-1',  49: 'TRBV5-1',  50: 'TRBV20-1',  51: 'TRBV14',  52: 'TRBV10-3',  53: 'TRBV10-1',  54: 'TRBV24-1',  55: 'TRBV12-3',  56: 'TRBV7-4',  57: 'TRBV28',  58: 'TRBV12-4',  59: 'TRBV6-4',  60: 'TRBV6-8',  61: 'TRBV24-1',  62: 'TRBV10-1',  63: 'TRBV7-9',  64: 'TRBV7-8',  65: 'TRBV7-6',  66: 'TRBV7-4',  67: 'TRBV7-9',  68: 'TRBV20-1',  69: 'TRBV7-4',  70: 'TRBV24-1',  71: 'TRBV6-2',  72: 'TRBV5-1',  73: 'TRBV9',  74: 'TRBV6-1',  75: 'TRBV7-8',  76: 'TRBV29-1',  77: 'TRBV4-1',  78: 'TRBV12-3',  79: 'TRBV5-1',  80: 'TRBV7-3',  81: 'TRBV13',  82: 'TRBV6-3',  83: 'TRBV9',  84: 'TRBV10-1',  85: 'TRBV25-1',  86: 'TRBV13',  87: 'TRBV20-1',  88: 'TRBV11-3',  89: 'TRBV12-5',  90: 'TRBV4-3',  91: 'TRBV5-6',  92: 'TRBV5-6',  93: 'TRBV11-2',  94: 'TRBV29-1',  95: 'TRBV6-9',  96: 'TRBV19',  97: 'TRBV7-4',  98: 'TRBV12-3',  99: 'TRBV5-4'}, 'j_b_gene': {0: 'TRBJ2-7',  1: 'TRBJ2-3',  2: 'TRBJ2-2',  3: 'TRBJ1-3',  4: 'TRBJ2-3',  5: 'TRBJ2-5',  6: 'TRBJ2-7',  7: 'TRBJ2-7',  8: 'TRBJ2-3',  9: 'TRBJ1-4',  10: 'TRBJ1-6',  11: 'TRBJ2-2',  12: 'TRBJ2-2',  13: 'TRBJ2-2',  14: 'TRBJ1-5',  15: 'TRBJ1-1',  16: 'TRBJ1-1',  17: 'TRBJ2-7',  18: 'TRBJ2-7',  19: 'TRBJ1-5',  20: 'TRBJ2-7',  21: 'TRBJ1-2',  22: 'TRBJ2-5',  23: 'TRBJ1-2',  24: 'TRBJ2-7',  25: 'TRBJ2-7',  26: 'TRBJ2-7',  27: 'TRBJ2-1',  28: 'TRBJ2-3',  29: 'TRBJ2-7',  30: 'TRBJ1-5',  31: 'TRBJ1-2',  32: 'TRBJ1-3',  33: 'TRBJ2-3',  34: 'TRBJ1-4',  35: 'TRBJ2-2',  36: 'TRBJ1-2',  37: 'TRBJ2-1',  38: 'TRBJ2-7',  39: 'TRBJ2-7',  40: 'TRBJ2-5',  41: 'TRBJ2-7',  42: 'TRBJ2-5',  43: 'TRBJ2-1',  44: 'TRBJ2-7',  45: 'TRBJ2-5',  46: 'TRBJ2-3',  47: 'TRBJ2-5',  48: 'TRBJ2-1',  49: 'TRBJ1-4',  50: 'TRBJ1-6',  51: 'TRBJ2-7',  52: 'TRBJ1-2',  53: 'TRBJ2-3',  54: 'TRBJ2-5',  55: 'TRBJ2-7',  56: 'TRBJ2-1',  57: 'TRBJ2-7',  58: 'TRBJ2-2',  59: 'TRBJ1-1',  60: 'TRBJ1-2',  61: 'TRBJ2-5',  62: 'TRBJ2-3',  63: 'TRBJ1-3',  64: 'TRBJ2-4',  65: 'TRBJ2-7',  66: 'TRBJ1-5',  67: 'TRBJ1-4',  68: 'TRBJ2-7',  69: 'TRBJ1-4',  70: 'TRBJ2-7',  71: 'TRBJ2-5',  72: 'TRBJ2-1',  73: 'TRBJ2-1',  74: 'TRBJ2-7',  75: 'TRBJ2-7',  76: 'TRBJ2-7',  77: 'TRBJ1-1',  78: 'TRBJ1-4',  79: 'TRBJ1-6',  80: 'TRBJ2-2',  81: 'TRBJ2-1',  82: 'TRBJ2-2',  83: 'TRBJ2-7',  84: 'TRBJ1-2',  85: 'TRBJ2-7',  86: 'TRBJ1-2',  87: 'TRBJ2-1',  88: 'TRBJ2-1',  89: 'TRBJ1-1',  90: 'TRBJ1-1',  91: 'TRBJ1-5',  92: 'TRBJ2-5',  93: 'TRBJ1-6',  94: 'TRBJ2-7',  95: 'TRBJ1-6',  96: 'TRBJ1-2',  97: 'TRBJ2-1',  98: 'TRBJ2-1',  99: 'TRBJ2-7'}, 'cdr3_b_aa': {0: 'CASMAPPSTRVYEQYF',  1: 'CASSPQRRDTQYF',  2: 'CASSRGAANTGELFF',  3: 'CSAPGASGNTIYF',  4: 'CASSQRVATDTQYF',  5: 'CSAPHPETSGSETQYF',  6: 'CASGGRAYYEQYF',  7: 'CASSLYYKTLSYEQYF',  8: 'CASSPWPGQTDTQYF',  9: 'CASWTDLPHEKLFF',  10: 'CASSVGVSLHF',  11: 'CASSVCLVTQHTGELFF',  12: 'CASSGEGQGGNTGELFF',  13: 'CAWIRGGQKVTGELFF',  14: 'CASAPRPQDRGTSWSNQPQHF',  15: 'CSAGAVKEAFF',  16: 'CASARGLNTEAFF',  17: 'CASSPRLADSEQYF',  18: 'CASSEAPWTGEYEQYF',  19: 'CASSPQGERKHF',  20: 'CASSYWGYEQYF',  21: 'CASSQDKRQIYGYTF',  22: 'CASSWTPQTTVLTQYF',  23: 'CASKEGQVTWYGYTF',  24: 'CASSVRRDCYYEQYF',  25: 'CASSPSTGLRNSYEQYF',  26: 'CASRAGASYEQYF',  27: 'CASSLGGIAAYNEQFF',  28: 'CASSEPEYF',  29: 'CASSGSVAESGSSYEQYF',  30: 'CASSLRPGNQPQHF',  31: 'CASSVGTGGGYYGYTF',  32: 'CASSYVRGSVISGNTIYF',  33: 'CASITLGSQGTDTQYF',  34: 'CASSYSRLNEKLFF',  35: 'CATSDLPHLHGVELFF',  36: 'CASSPRTGRDPSPNYGYTF',  37: 'CATRGPRQYNEQFF',  38: 'CKPGLAGAKNYEQYF',  39: 'CSVEGGVYEQYF',  40: 'CSARDSRPGAEETQYF',  41: 'CASKKTGEQYF',  42: 'CATFLSEETQYF',  43: 'CASSEVDEQFF',  44: 'CASSLLPRPPGYEQYF',  45: 'CASSLATGTSPQDYVETQYF',  46: 'CASSQGPVLAARGTDTQYF',  47: 'CASSTGRLETQYF',  48: 'CSAEGRDLYNEQFF',  49: 'CASSLGSRDRGLGHNEKLFF',  50: 'CSAQNRVLIGSSYNSPLHF',  51: 'CASSRASSREAYEQYF',  52: 'CAISKDEGGIYGYTF',  53: 'CAGFGGCGTSVVNTDTQYF',  54: 'CATSAATWGETQYF',  55: 'CASRDRGRGEMPYEQYF',  56: 'CASSSRSGRAHNEQFF',  57: 'CASSFEPGQVLEQYF',  58: 'CASSLIGTLGELFF',  59: 'CASSDPQGAFF',  60: 'CASTSERVVYGYTF',  61: 'CATSPQGGETQYF',  62: 'CASSERDRGLVTDTQYF',  63: 'CASSLIATPSGNTIYF',  64: 'CASSKDRATKNIQYF',  65: 'CASSYWGSSYEQYF',  66: 'CASRGGQGRWNQPQHF',  67: 'CASSLRIGIYELFF',  68: 'CSAAGQVSSYEQYF',  69: 'CASSLITRGGCEKLFF',  70: 'CATSPRQVPTQYF',  71: 'CASRSGQGRETQYF',  72: 'CASSFHPYEQFF',  73: 'CASSKFRNEQFF',  74: 'CASSQLWVGPSSYEQYF',  75: 'CASSTYRSVYEQYF',  76: 'CSVERPRTGTKQYF',  77: 'CASSQDQNFPLRGPGNTEAFF',  78: 'CASSFVQLFF',  79: 'CASSLGRFNSPLHF',  80: 'CASSRQYTGELFF',  81: 'CASSATYNEQFF',  82: 'CASIGARRYTGELFF',  83: 'CASLLRLPGTGEAPQQYF',  84: 'CASSESSRPSDYGYTF',  85: 'CASILAGRAYEQYF',  86: 'CASSKRLQGELRGYTF',  87: 'CSARDRLPGSYNEQFF',  88: 'CASSLYDPAIAEQFF',  89: 'CASGSRQNTEAFF',  90: 'CASSQVDLRDRTEAFF',  91: 'CASSVGARYQPQHF',  92: 'CASSLASPQGKETQYF',  93: 'CASSMRTRARAVNSPLHF',  94: 'CSVANKGGDYEQYF',  95: 'CASSSQGTVCNSPLHF',  96: 'CASSTISPPAGTGRGNYGYTF',  97: 'CASLSRTNEQFF',  98: 'CASRPTSVPGNEQFF',  99: 'CASSSRAAYEQYF'}, 'cdr3_b_aa_pgen_naive': {0: 6.914037864863085e-14,  1: 1.2063033809105577e-08,  2: 7.230480962154434e-08,  3: 2.441254704991944e-08,  4: 5.457779617823437e-09,  5: 1.8105111073751246e-13,  6: 2.2302788533351744e-09,  7: 3.635638135689051e-12,  8: 4.1178891642054886e-10,  9: 1.0396372609162913e-12,  10: 2.2971251444476465e-09,  11: 3.6865609737806515e-14,  12: 1.4255762223071154e-09,  13: 4.3459784193776896e-13,  14: 3.078189409268021e-18,  15: 8.233581355428577e-11,  16: 3.857060427672622e-08,  17: 9.706821174158532e-10,  18: 8.757214158314706e-11,  19: 1.1112551640465755e-11,  20: 2.585145100653314e-07,  21: 2.2327877357855368e-10,  22: 2.010478311901196e-15,  23: 2.8429678895283604e-13,  24: 5.808740878605505e-11,  25: 2.3808007992852488e-11,  26: 1.38334052345602e-07,  27: 6.642448927244691e-10,  28: 1.2205597771236976e-08,  29: 3.7879390833995055e-13,  30: 1.3092281608952943e-07,  31: 2.0386542823859245e-09,  32: 2.1604509938692757e-12,  33: 2.7112690148459317e-12,  34: 1.058584286483682e-08,  35: 2.800222356707047e-15,  36: 1.7932886392772563e-13,  37: 1.2431001470193343e-10,  38: 6.710706240270747e-13,  39: 3.21823557183969e-08,  40: 1.3769398494169063e-11,  41: 1.1156869144824308e-08,  42: 2.8207545717856966e-10,  43: 6.385796860319103e-08,  44: 8.140491043283133e-11,  45: 4.878303472102873e-17,  46: 8.313081659196325e-13,  47: 4.1840368142505525e-08,  48: 1.0399400517805569e-10,  49: 7.99393741473435e-13,  50: 8.080573690917516e-15,  51: 3.0738477758027824e-11,  52: 2.1737276676588726e-13,  53: 4.801501086609653e-19,  54: 2.313565288524842e-11,  55: 6.617674191809395e-13,  56: 8.604386069622438e-11,  57: 2.4603862070337967e-11,  58: 7.643032484461676e-10,  59: 2.0746470730219507e-08,  60: 1.8927778250079475e-11,  61: 7.997046952811914e-09,  62: 2.343315500442348e-10,  63: 1.297618753501468e-10,  64: 9.731967444396922e-10,  65: 5.0156503143109334e-08,  66: 1.7588308829939258e-10,  67: 7.328555678996252e-14,  68: 1.0248607568108533e-09,  69: 1.9655336234540015e-11,  70: 1.3610837460509859e-11,  71: 1.3297974521321031e-08,  72: 1.8353109159998242e-09,  73: 4.884256442763288e-09,  74: 3.919237198300412e-12,  75: 2.9924694535279167e-10,  76: 1.2674495135651994e-13,  77: 4.703195535665928e-16,  78: 1.2689580930823331e-09,  79: 1.5990121704264834e-08,  80: 4.935376573900059e-08,  81: 2.407387842320861e-07,  82: 7.151027574301887e-11,  83: 1.4740281832590636e-18,  84: 1.877582231272972e-11,  85: 9.601384924937414e-09,  86: 1.4375805892905044e-13,  87: 2.9393203210410567e-10,  88: 6.356815915829923e-14,  89: 6.1214917257547434e-09,  90: 1.536760636399668e-11,  91: 5.606605153850914e-09,  92: 4.3059055934637596e-10,  93: 6.442146596910754e-15,  94: 1.7570063235080356e-11,  95: 2.7755532219112647e-11,  96: 9.323350784382565e-16,  97: 2.0563733927894267e-09,  98: 2.5870364121682052e-11,  99: 2.2028072332298127e-07}, 'cdr3_b_aa_pgen_vj': {0: 2.3865502750561543e-16,  1: 7.018929424726567e-10,  2: 8.544662518199813e-10,  3: 2.280828606609376e-08,  4: 6.857431138631455e-11,  5: 1.736578157836307e-13,  6: 2.303235722336972e-11,  7: 4.209493460358739e-13,  8: 2.0117566726160448e-11,  9: 2.4042206282773226e-14,  10: 5.426842932124167e-10,  11: 9.792583155121137e-16,  12: 5.44678798237017e-11,  13: 4.30557550481105e-13,  14: 1.280811127292118e-19,  15: 7.533021838385887e-11,  16: 2.669691153114048e-09,  17: 1.7895196460866634e-10,  18: 5.203983897403474e-11,  19: 2.6027972640667407e-13,  20: 9.060589067714544e-09,  21: 5.644474206563129e-11,  22: 6.60929236362155e-17,  23: 4.1220372605234154e-15,  24: 8.214738656423212e-13,  25: 5.05022947078353e-13,  26: 7.02119106729305e-09,  27: 1.0533021771460002e-10,  28: 2.8023013377676423e-10,  29: 1.9003998943386195e-14,  30: 2.9066851001244205e-09,  31: 8.709407024839163e-10,  32: 2.7442125470226457e-13,  33: 2.72558280239742e-13,  34: 1.2021718585151029e-09,  35: 2.2047398367058983e-15,  36: 8.961710954042191e-15,  37: 8.468200962762522e-11,  38: 8.002459656021119e-14,  39: 3.1730208077380285e-08,  40: 1.37596382386555e-11,  41: 3.890187494205268e-10,  42: 6.368585373496035e-12,  43: 5.427180127623842e-09,  44: 1.0037866949049539e-11,  45: 5.989257946241295e-18,  46: 2.2280206700158056e-13,  47: 2.272321786491923e-09,  48: 9.897217584552818e-11,  49: 1.4764744882686286e-13,  50: 7.689703124531547e-15,  51: 1.4852614312308334e-12,  52: 2.0324100187517432e-13,  53: 2.2969447535675985e-20,  54: 2.1759771574210604e-11,  55: 2.4810878358299248e-14,  56: 1.665124632222371e-12,  57: 2.1962373477886857e-12,  58: 2.203177254289868e-11,  59: 7.112758415455606e-09,  60: 1.8692412762881695e-13,  61: 5.325537944608622e-09,  62: 3.4670584146582016e-11,  63: 9.476944459351147e-12,  64: 1.2391408296574628e-11,  65: 4.1121797222065104e-10,  66: 1.094533411332046e-12,  67: 4.159624131021794e-15,  68: 9.7107703311745e-10,  69: 3.9724700777576946e-13,  70: 1.3618192266404085e-13,  71: 4.484723818780005e-10,  72: 2.3349354957576345e-10,  73: 2.6847105588185296e-10,  74: 2.7554363862346628e-14,  75: 3.7909046756599716e-12,  76: 1.1347382626878078e-13,  77: 1.443137061332558e-16,  78: 4.81940473895189e-11,  79: 2.2366024778700746e-09,  80: 3.269962150775701e-09,  81: 2.1715720862033117e-08,  82: 1.5861668921544012e-12,  83: 6.672168646917713e-20,  84: 8.988117048969934e-12,  85: 2.437139200956509e-10,  86: 1.8602066668521753e-14,  87: 2.932912059438856e-10,  88: 2.069223363622431e-15,  89: 3.9187699591759895e-09,  90: 1.4250556188978398e-12,  91: 9.676074516023271e-11,  92: 3.747226033816331e-11,  93: 8.13599360322581e-17,  94: 1.739205400742978e-11,  95: 2.64538490003725e-13,  96: 9.404784641645238e-17,  97: 1.5940102953678025e-11,  98: 1.1045306727573469e-12,  99: 7.938947607979633e-09}, 'cdr3_b_nuc': {0: 'TGTGCCAGCATGGCCCCCCCGTCGACTAGAGTCTACGAGCAGTACTTC',  1: 'TGTGCCAGCAGCCCACAGCGAAGAGATACGCAGTATTTT',  2: 'TGTGCCAGCAGCCGGGGGGCTGCGAACACCGGGGAGCTGTTTTTT',  3: 'TGCAGTGCGCCAGGGGCCTCTGGAAACACCATATATTTT',  4: 'TGTGCCAGCAGCCAGCGGGTGGCGACAGATACGCAGTATTTT',  5: 'TGCAGTGCTCCCCACCCCGAGACTAGCGGGAGCGAGACCCAGTACTTC',  6: 'TGCGCCAGCGGGGGCCGGGCATACTACGAGCAGTACTTC',  7: 'TGCGCCAGCAGCTTGTATTATAAGACACTATCCTACGAGCAGTACTTC',  8: 'TGCGCCAGCAGCCCTTGGCCGGGACAGACAGATACGCAGTATTTT',  9: 'TGTGCCAGCTGGACAGACCTTCCACATGAAAAACTGTTTTTT',  10: 'TGTGCCAGCAGCGTCGGCGTGTCCCTCCACTTT',  11: 'TGTGCCAGCAGTGTGTGCCTAGTGACCCAGCACACCGGGGAGCTGTTTTTT',  12: 'TGCGCCAGCAGTGGAGAGGGACAGGGCGGGAACACCGGGGAGCTGTTTTTT',  13: 'TGTGCCTGGATCCGGGGGGGCCAAAAGGTTACCGGGGAGCTGTTTTTT',  14: 'TGTGCCAGCGCCCCGAGACCCCAAGACAGGGGGACCTCCTGGAGCAATCAGCCCCAGCATTTT',  15: 'TGCAGTGCTGGGGCAGTTAAGGAAGCTTTCTTT',  16: 'TGCGCCAGCGCTAGGGGGCTGAACACTGAAGCTTTCTTT',  17: 'TGTGCCAGCTCACCACGACTAGCAGACAGCGAGCAGTACTTC',  18: 'TGTGCCAGCAGTGAAGCGCCCTGGACAGGGGAGTACGAGCAGTACTTC',  19: 'TGTGCCAGTAGTCCCCAGGGAGAGAGAAAGCATTTT',  20: 'TGTGCCAGCAGTTACTGGGGCTACGAGCAGTACTTC',  21: 'TGCGCCAGCAGCCAAGATAAGAGACAGATCTATGGCTACACCTTC',  22: 'TGTGCCAGCAGCTGGACCCCCCAAACGACAGTTCTGACCCAGTACTTC',  23: 'TGTGCCAGCAAGGAAGGACAGGTCACTTGGTATGGCTACACCTTC',  24: 'TGTGCCAGCAGCGTGCGGCGGGACTGCTACTACGAGCAGTACTTC',  25: 'TGTGCCAGCAGCCCCTCGACAGGGTTAAGGAACTCCTACGAGCAGTACTTC',  26: 'TGTGCCAGTAGAGCAGGGGCGTCCTACGAGCAGTACTTC',  27: 'TGCGCCAGCAGCTTGGGGGGGATAGCTGCCTACAATGAGCAGTTCTTC',  28: 'TGTGCCAGCAGTGAACCTGAGTATTTT',  29: 'TGTGCCAGCAGCGGTAGTGTGGCAGAAAGCGGCTCCTCCTACGAGCAGTACTTC',  30: 'TGTGCCAGCAGCTTAAGACCAGGAAATCAGCCCCAGCATTTT',  31: 'TGTGCCAGCAGCGTAGGGACAGGGGGGGGCTATTATGGCTACACCTTC',  32: 'TGTGCCAGCAGTTACGTGAGGGGGTCCGTCATATCTGGAAACACCATATATTTT',  33: 'TGTGCCAGCATAACTCTAGGGAGTCAGGGCACAGATACGCAGTATTTT',  34: 'TGTGCCAGCAGTTACTCGCGACTAAATGAAAAACTGTTTTTT',  35: 'TGTGCCACCAGTGATTTGCCTCACCTTCACGGGGTGGAGCTGTTTTTT',  36: 'TGCGCCAGCAGCCCTAGGACAGGGCGGGACCCCTCCCCTAACTATGGCTACACCTTC',  37: 'TGTGCCACCAGGGGCCCGAGACAATACAATGAGCAGTTCTTC',  38: 'TGCAAACCGGGACTAGCGGGAGCGAAGAACTACGAGCAGTACTTC',  39: 'TGCAGCGTTGAAGGAGGGGTCTACGAGCAGTACTTC',  40: 'TGCAGTGCTAGAGACTCTCGTCCGGGGGCCGAAGAGACCCAGTACTTC',  41: 'TGTGCCAGCAAAAAGACGGGCGAGCAGTACTTC',  42: 'TGTGCCACGTTCCTAAGTGAAGAGACCCAGTACTTC',  43: 'TGCGCCAGCAGCGAAGTCGATGAGCAGTTCTTC',  44: 'TGTGCCAGCAGTTTACTACCGAGGCCCCCCGGCTACGAGCAGTACTTC',  45: 'TGTGCCAGCAGCTTAGCCACCGGTACATCCCCTCAGGACTACGTAGAGACCCAGTACTTC',  46: 'TGTGCCAGCAGCCAAGGGCCCGTACTAGCGGCTAGGGGCACAGATACGCAGTATTTT',  47: 'TGTGCCAGCAGCACAGGGCGGCTAGAGACCCAGTACTTC',  48: 'TGCAGTGCCGAGGGGAGGGATCTTTACAATGAGCAGTTCTTC',  49: 'TGCGCCAGCAGCTTGGGGAGCCGGGACAGGGGGCTAGGGCATAATGAAAAACTGTTTTTT',  50: 'TGCAGTGCTCAAAACAGGGTCCTAATCGGAAGCTCCTATAATTCACCCCTCCACTTT',  51: 'TGTGCCAGCAGCCGAGCTTCCTCAAGAGAAGCCTACGAGCAGTACTTC',  52: 'TGTGCCATCAGTAAAGACGAAGGGGGAATTTATGGCTACACCTTC',  53: 'TGCGCCGGTTTCGGAGGTTGCGGGACTAGCGTAGTCAATACAGATACGCAGTATTTT',  54: 'TGTGCCACCAGTGCTGCGACCTGGGGGGAGACCCAGTACTTC',  55: 'TGTGCCAGCAGGGATAGAGGTAGGGGGGAGATGCCCTACGAGCAGTACTTC',  56: 'TGTGCCAGCAGCTCCCGCAGCGGGAGGGCCCACAATGAGCAGTTCTTC',  57: 'TGTGCCAGCAGTTTCGAACCGGGACAGGTTCTCGAGCAGTACTTC',  58: 'TGTGCCAGCAGTTTAATCGGGACCCTCGGGGAGCTGTTTTTT',  59: 'TGTGCCAGCAGTGATCCCCAGGGAGCTTTCTTT',  60: 'TGTGCCAGCACCTCAGAGAGGGTAGTCTATGGCTACACCTTC',  61: 'TGTGCCACCAGTCCCCAGGGGGGGGAGACCCAGTACTTC',  62: 'TGCGCCAGCAGTGAGAGGGACAGGGGCCTAGTCACAGATACGCAGTATTTT',  63: 'TGTGCCAGCAGCTTAATCGCCACCCCCTCTGGAAACACCATATATTTT',  64: 'TGTGCCAGCAGCAAGGACCGGGCAACCAAAAACATTCAGTACTTC',  65: 'TGTGCCAGCAGCTATTGGGGGAGCTCCTACGAGCAGTACTTC',  66: 'TGTGCCAGCAGGGGGGGACAGGGGAGATGGAATCAGCCCCAGCATTTT',  67: 'TGTGCCAGCAGCTTAAGAATTGGGATTTACGAACTGTTTTTT',  68: 'TGCAGTGCGGCAGGACAGGTGAGCTCCTACGAGCAGTACTTC',  69: 'TGTGCCAGCAGCTTAATAACCAGGGGCGGCTGTGAAAAACTGTTTTTT',  70: 'TGTGCCACCAGTCCCCGACAGGTCCCCACGCAGTACTTC',  71: 'TGTGCCAGCAGGTCCGGACAGGGGAGAGAGACCCAGTACTTC',  72: 'TGCGCCAGCAGCTTTCACCCCTATGAGCAGTTCTTC',  73: 'TGTGCCAGCAGCAAGTTTAGGAATGAGCAGTTCTTC',  74: 'TGTGCCAGCTCTCAACTTTGGGTTGGACCGAGCTCCTACGAGCAGTACTTC',  75: 'TGTGCCAGCAGCACATACAGGTCGGTCTACGAGCAGTACTTC',  76: 'TGCAGCGTTGAAAGGCCTCGGACAGGGACGAAGCAGTACTTC',  77: 'TGCGCCAGCAGCCAAGATCAAAATTTCCCTCTAAGAGGACCCGGGAACACTGAAGCTTTCTTT',  78: 'TGTGCCAGCAGTTTCGTACAGCTGTTTTTT',  79: 'TGCGCCAGCAGCTTGGGGAGGTTTAATTCACCCCTCCACTTT',  80: 'TGTGCCAGCAGCCGACAATACACCGGGGAGCTGTTTTTT',  81: 'TGTGCCAGCAGCGCGACTTACAATGAGCAGTTCTTC',  82: 'TGTGCCAGCATCGGGGCCAGGCGTTACACCGGGGAGCTGTTTTTT',  83: 'TGTGCCAGCCTGCTAAGGCTCCCCGGGACAGGGGAGGCCCCGCAGCAGTACTTC',  84: 'TGCGCCAGCAGTGAGTCGAGCCGACCATCGGACTATGGCTACACCTTC',  85: 'TGTGCCAGCATACTAGCGGGGCGCGCCTACGAGCAGTACTTC',  86: 'TGTGCCAGCAGCAAACGGCTTCAGGGGGAGCTCAGGGGCTACACCTTC',  87: 'TGCAGTGCTAGAGATAGACTGCCCGGCTCCTACAATGAGCAGTTCTTC',  88: 'TGTGCCAGCAGCTTATATGACCCGGCCATTGCCGAGCAGTTCTTC',  89: 'TGTGCTAGTGGCTCCCGACAGAACACTGAAGCTTTCTTT',  90: 'TGCGCCAGCAGCCAAGTCGACCTCCGGGACAGGACTGAAGCTTTCTTT',  91: 'TGTGCCAGCAGCGTAGGGGCTCGATATCAGCCCCAGCATTTT',  92: 'TGTGCCAGCAGCTTGGCCTCCCCCCAGGGTAAGGAGACCCAGTACTTC',  93: 'TGTGCCAGCAGCATGAGAACGCGGGCGAGGGCAGTTAATTCACCCCTCCACTTT',  94: 'TGCAGCGTTGCTAATAAGGGGGGAGACTACGAGCAGTACTTC',  95: 'TGTGCCAGCAGTTCGCAGGGGACGGTTTGTAATTCACCCCTCCACTTT',  96: 'TGTGCCAGTAGTACAATTTCTCCTCCAGCCGGGACAGGGCGAGGTAACTATGGCTACACCTTC',  97: 'TGTGCCAGCTTGAGTCGGACCAATGAGCAGTTCTTC',  98: 'TGTGCCAGCAGGCCCACTAGCGTCCCCGGCAATGAGCAGTTCTTC',  99: 'TGTGCCAGCAGCTCGCGGGCGGCCTACGAGCAGTACTTC'}, 'cdr3_b_nuc_pgen_naive': {0: 1.734152261640279e-16,  1: 3.0491878100642465e-11,  2: 1.7814966901051268e-09,  3: 4.061716168558557e-10,  4: 1.7887261912917487e-11,  5: 1.6781558628972619e-15,  6: 1.1327851208671852e-12,  7: 1.0321052750140167e-15,  8: 5.740573709656084e-12,  9: 8.571700249375967e-15,  10: 3.5349750395681235e-12,  11: 1.5366268466322347e-17,  12: 7.316564506943518e-13,  13: 1.8820637641526145e-15,  14: 1.33741239007913e-22,  15: 1.0873182550293804e-12,  16: 1.0060018184333559e-10,  17: 2.458961248195273e-13,  18: 7.389496901374606e-12,  19: 1.123677363576676e-15,  20: 7.281494838140756e-08,  21: 8.204367467276173e-12,  22: 6.965690252113986e-18,  23: 1.5861047752649656e-15,  24: 1.0077473573639502e-13,  25: 8.442946300390104e-14,  26: 6.588106278464312e-11,  27: 1.1710257215649476e-12,  28: 9.051523373136122e-11,  29: 2.1341775873186663e-19,  30: 2.007969881912253e-10,  31: 5.914569096310692e-13,  32: 7.157141622133917e-17,  33: 1.9434236181976194e-15,  34: 6.056459233020752e-11,  35: 1.5834670568995698e-17,  36: 1.129256490971606e-17,  37: 2.518957712023977e-13,  38: 3.2236120437603284e-14,  39: 1.1891442229157848e-09,  40: 1.9722902619993103e-15,  41: 3.0573768156523725e-10,  42: 5.284140000094136e-13,  43: 1.5448013907032131e-10,  44: 7.0024719898054645e-15,  45: 6.138880462179589e-23,  46: 1.260933143160699e-15,  47: 3.1792428354029705e-10,  48: 9.995661436079378e-14,  49: 5.663662550971553e-16,  50: 8.985526424800377e-18,  51: 3.479470811732457e-16,  52: 1.8411911151991907e-16,  53: 6.014861995089492e-25,  54: 1.0460221965227395e-13,  55: 2.2161883056640783e-17,  56: 3.0371205429339787e-13,  57: 3.9059265447378243e-13,  58: 8.431615268098884e-12,  59: 4.775310603434865e-10,  60: 7.178922635665852e-14,  61: 2.303750724454415e-10,  62: 1.6399836408621235e-13,  63: 9.059816879783715e-13,  64: 1.204569861311711e-12,  65: 2.0206695865031807e-09,  66: 4.308746263485896e-12,  67: 7.270048389800469e-17,  68: 4.015330791477852e-12,  69: 1.4607731640812475e-14,  70: 2.27289152689229e-15,  71: 1.533185591851643e-10,  72: 2.437188500830672e-11,  73: 2.354289619584134e-10,  74: 2.556027255901073e-18,  75: 2.027493790150674e-12,  76: 2.9018783720921165e-16,  77: 1.8816620439383223e-21,  78: 5.41089097754921e-11,  79: 1.3922012526777266e-10,  80: 1.8009760557635485e-09,  81: 9.019715264014498e-09,  82: 1.0045783905957992e-13,  83: 4.06128748749541e-23,  84: 7.186141387620951e-15,  85: 1.8069989757881862e-11,  86: 6.039777570833787e-18,  87: 4.2787434602244877e-13,  88: 1.620598071305283e-17,  89: 2.407043487586143e-11,  90: 1.7704705578541354e-13,  91: 2.3620769632981546e-11,  92: 1.7255324593117903e-13,  93: 1.0035547715144568e-19,  94: 1.2495045027935546e-13,  95: 2.292019535606094e-14,  96: 1.2772818463927796e-21,  97: 4.8481852310263515e-12,  98: 8.41485747769262e-14,  99: 1.6392822552171742e-09}, 'cdr3_b_nuc_pgen_vj': {0: 4.1409227921143184e-19,  1: 3.478210575794524e-12,  2: 4.7294530042333246e-11,  3: 4.061453001167187e-10,  4: 4.3878287014439494e-13,  5: 1.6781288809188335e-15,  6: 9.480361762430535e-14,  7: 1.0298497889049737e-15,  8: 2.773314416268998e-12,  9: 2.587813597582129e-16,  10: 9.446806450562872e-13,  11: 1.7301862555380362e-18,  12: 5.766373888815899e-13,  13: 1.867902758609301e-15,  14: 8.652317996399047e-24,  15: 1.0872958221594489e-12,  16: 4.378019580851762e-11,  17: 2.456730068039153e-13,  18: 5.259615738201701e-12,  19: 1.119055454056516e-15,  20: 3.411678575717849e-11,  21: 5.678589327647393e-12,  22: 5.68549567198179e-19,  23: 2.9563666073996867e-17,  24: 2.4335009816717186e-15,  25: 3.3444319442394594e-15,  26: 6.332018308174928e-11,  27: 1.1546167741239983e-12,  28: 3.2307073678663144e-11,  29: 1.825278168804305e-20,  30: 1.0005956287934632e-11,  31: 4.571225099813873e-13,  32: 1.0970970628678228e-17,  33: 2.4913656698368696e-16,  34: 8.30679320691883e-12,  35: 1.562455866664884e-17,  36: 5.6416723250667425e-18,  37: 2.211810917128019e-13,  38: 4.817672354001842e-15,  39: 1.1891356800900881e-09,  40: 1.9722895200645596e-15,  41: 1.3811647335150806e-11,  42: 1.934179214468284e-14,  43: 1.1953499712297234e-11,  44: 2.8608865842953713e-15,  45: 1.3628154441750303e-23,  46: 5.197629280396177e-16,  47: 2.7481810004457766e-11,  48: 9.994708123921187e-14,  49: 5.657532924952974e-16,  50: 8.98544471013633e-18,  51: 3.8081295318087054e-17,  52: 1.8355861385298862e-16,  53: 2.451935176116424e-25,  54: 1.0447905251337959e-13,  55: 1.1737341377524506e-18,  56: 9.752702441431005e-15,  57: 9.849208628997563e-14,  58: 1.1611879995816127e-12,  59: 1.6073413462593622e-10,  60: 9.068702066945604e-16,  61: 2.242638057757804e-10,  62: 1.2966523755897978e-13,  63: 1.3172363965141576e-13,  64: 2.4629041680816547e-14,  65: 6.520257791700524e-11,  66: 3.200771578650519e-14,  67: 1.1081992752552407e-17,  68: 4.015161096886803e-12,  69: 4.98835112534432e-16,  70: 2.0895496379411486e-15,  71: 6.3270508026667134e-12,  72: 2.354973999722037e-11,  73: 2.100152109946426e-11,  74: 7.54502679675825e-20,  75: 4.2152253315825576e-14,  76: 2.822735194831518e-16,  77: 1.4118771108593716e-21,  78: 4.884134602317615e-12,  79: 1.374448267411574e-10,  80: 1.7041012916030437e-10,  81: 1.5594815028174447e-09,  82: 2.866822437802552e-15,  83: 2.5658568965911047e-24,  84: 5.553847931834292e-15,  85: 5.871340724179443e-13,  86: 1.2826332922908185e-18,  87: 4.2787434129342293e-13,  88: 1.6865627129038389e-18,  89: 2.406693182426464e-11,  90: 5.335938132972426e-14,  91: 3.524808517520173e-13,  92: 6.991026620010283e-14,  93: 4.2818941655342064e-21,  94: 1.249490384873736e-13,  95: 8.676999294829004e-16,  96: 1.2767117853239031e-21,  97: 4.920029440707552e-14,  98: 4.465892998345307e-15,  99: 1.1526578649034162e-10}})

human_a = pd.DataFrame({'v_a_gene': {0: 'TRAV4',  1: 'TRAV13-1',  2: 'TRAV19',  3: 'TRAV17',  4: 'TRAV13-1',  5: 'TRAV16',  6: 'TRAV26-1',  7: 'TRAV10',  8: 'TRAV13-1',  9: 'TRAV4'}, 'j_a_gene': {0: 'TRAJ37',  1: 'TRAJ49',  2: 'TRAJ47',  3: 'TRAJ57',  4: 'TRAJ47',  5: 'TRAJ40',  6: 'TRAJ30',  7: 'TRAJ48',  8: 'TRAJ10',  9: 'TRAJ3'}, 'cdr3_a_aa': {0: 'CLVGASSNTGKLIF',  1: 'CAASHTGNQFYF',  2: 'CALSETRGGNKLVF',  3: 'CALIITQGGSEKLVF',  4: 'CAASRWKLVF',  5: 'CALSGTYKYIF',  6: 'CIVRNVPRRDDKIIF',  7: 'CVVSAISNFGNEKLTF',  8: 'CAPRGAGGGNKLTF',  9: 'CLVGDSYSSASKIIF'}, 'cdr3_a_aa_pgen_naive': {0: 2.356257085606877e-06,  1: 5.674401511062899e-06,  2: 2.056949547985796e-09,  3: 5.414401015868125e-07,  4: 4.974986723045059e-09,  5: 9.769011261829654e-06,  6: 1.779310980955549e-11,  7: 1.0285379615056223e-06,  8: 1.0529872573526607e-08,  9: 7.55894850080523e-07}, 'cdr3_a_aa_pgen_vj': {0: 2.356095821265446e-06,  1: 3.2841340812881952e-06,  2: 1.923517237976596e-09,  3: 4.75210786000706e-09,  4: 1.4328067364929772e-09,  5: 7.686461509251469e-07,  6: 1.7792834967565246e-11,  7: 1.0099746880288588e-06,  8: 1.1907572266750828e-09,  9: 7.558932756495962e-07}, 'cdr3_a_nuc': {0: 'TGCCTCGTGGGTGCCTCTAGCAACACAGGCAAACTAATCTTT',  1: 'TGTGCAGCAAGTCACACCGGTAACCAGTTCTATTTT',  2: 'TGTGCTCTGAGTGAGACTAGGGGTGGAAACAAACTGGTCTTT',  3: 'TGTGCCCTAATTATAACTCAGGGCGGATCTGAAAAGCTGGTCTTT',  4: 'TGTGCAGCAAGTCGCTGGAAACTGGTCTTT',  5: 'TGTGCTCTATCAGGAACCTACAAATACATCTTT',  6: 'TGCATCGTCAGAAACGTCCCTCGTAGAGATGACAAGATCATCTTT',  7: 'TGTGTGGTGAGCGCGATATCTAACTTTGGAAATGAGAAATTAACCTTT',  8: 'TGTGCACCACGGGGGGCGGGAGGAGGAAACAAACTCACCTTT',  9: 'TGCCTCGTGGGTGACTCTTACAGCAGTGCTTCCAAGATAATCTTT'}, 'cdr3_a_nuc_pgen_naive': {0: 1.1142712274043998e-06,  1: 2.0523412968867407e-06,  2: 5.435809177786978e-11,  3: 2.050843267361052e-09,  4: 5.346030072407556e-11,  5: 5.42261576251427e-07,  6: 4.4147048976002436e-14,  7: 4.7506814685512685e-07,  8: 3.3207600247451725e-11,  9: 6.01057244903546e-08}, 'cdr3_a_nuc_pgen_vj': {0: 1.1142710428351316e-06,  1: 1.8138150205804282e-06,  2: 5.235023310571021e-11,  3: 1.038061181869578e-10,  4: 5.1459726766662146e-11,  5: 1.2006036071939807e-07,  6: 4.4147030613279436e-14,  7: 4.746203251840253e-07,  8: 1.3216271928249567e-11,  9: 6.010572443540152e-08}})


class test_olga_in_python3(unittest.TestCase):
    """

    Test that results obtained using python 3 modified version are
    the same as results produced in python 2.7 version available on via pip.

    July 2019, tcrdist made minor modifications to the original Olga code base.

    tcrdist2 authors UPDATED THE FOLLOWING CODE TO PYTHON 3
    USING COMMIT e825c333f0f9a4eb02132e0bcf86f0dca9123114 (Jan 18, 2019)

    ORIGINAL OLGA CODE CAN BE FOUND AT:
    https://github.com/zsethna/OLGA



    The test data was produced as follows (human_b)
    Installation:

    .. code-block:: bash

        virtualenv olga-env
        conda activate py27v
        source .source ./olga-env/bin/activate
        conda deactivate
        conda deactivate
        pip install olga
        pip install numpy
        pip install jupyterlab

    Python 2.7.11 |Continuum Analytics, Inc.| (default, Jun 15 2016, 16:09:16)
    [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)] on darwin

        Package                            Version
    ---------------------------------- -----------
    numpy                              1.16.4
    olga                               1.0.2

    .. code-block:: bash

        source ./olga-env/bin/activate
        olga-generate_sequences --humanTRB -o human_b_example_seqs.tsv -n 1e2
        olga-compute_pgen -i human_b_example_seqs.tsv --humanTRB -o human_b_example_pgens_wvj.tsv --v_in 2 --j_in 3
        olga-compute_pgen --humanTRB -i human_b_example_seqs.tsv -o human_b_example_pgens_no_vj.tsv

    Manual assignment of headers:
    - cdr3_b_aa_pgen_naive for example_pgens_no_vj.tsv
    - cdr3_b_aa_pgen_vj for example_pgens_wvj.tsv

    .. code-block:: python

        import pandas as pd
        x = pd.read_csv("human_b_example_pgens_wvj.tsv", sep = "\t", header =0)
        z = pd.read_csv("human_b_example_pgens_no_vj.tsv", sep = "\t", header = 0)
        y = pd.read_csv("human_b_example_seqs.tsv", sep = "\t", header = 0)
        data = pd.concat([x,
                      z[[ 'cdr3_b_aa_pgen_naive', 'cdr3_b_nuc_pgen_naive' ]],
                      y[['v_b_gene', 'j_b_gene']]], axis = 1)

        human_b_olga_ref_test_set = data[['v_b_gene',
                                          'j_b_gene',
                                          'cdr3_b_aa',
                                          'cdr3_b_aa_pgen_naive',
                                          'cdr3_b_aa_pgen_vj',
                                          'cdr3_b_nuc',
                                          'cdr3_b_nuc_pgen_naive',
                                          'cdr3_b_nuc_pgen_vj']]
        human_b_olga_ref_test_set.to_dict()

    # For Alpha Chain

    .. code-block:: bash

        source ./olga-env/bin/activate
        olga-generate_sequences --humanTRA -o human_a_example_seqs.tsv -n 10
        olga-compute_pgen -i human_a_example_seqs.tsv --humanTRA -o human_a_example_pgens_wvj.tsv --v_in 2 --j_in 3
        olga-compute_pgen --humanTRA -i human_a_example_seqs.tsv -o human_a_example_pgens_no_vj.tsv

    .. code-block:: python
        x = pd.read_csv("human_a_example_pgens_wvj.tsv", sep = "\t", header =0)
        z = pd.read_csv("human_a_example_pgens_no_vj.tsv", sep = "\t", header = 0)
        y = pd.read_csv("human_a_example_seqs.tsv", sep = "\t", header = 0)

        data = pd.concat([x,
                          z[[ 'cdr3_a_aa_pgen_naive', 'cdr3_a_nuc_pgen_naive' ]],
                          y[['v_a_gene', 'j_a_gene']]], axis = 1)

        human_a_olga_ref_test_set = data[['v_a_gene',
                                          'j_a_gene',
                                          'cdr3_a_aa',
                                          'cdr3_a_aa_pgen_naive',
                                          'cdr3_a_aa_pgen_vj',
                                          'cdr3_a_nuc',
                                          'cdr3_a_nuc_pgen_naive',
                                          'cdr3_a_nuc_pgen_vj']]
        human_a = human_a_olga_ref_test_set.to_dict()
    """

    def test_something(self):
        "this is a template"
        gravitational_waves = True
        self.assertTrue(gravitational_waves)

    def test_olga_update_to_python3_pgens_human_beta_naive(self):
        """
        Providing Only cdr3 Beta No V J Gene Usage Information (naive) for 100 Sequences
        """
        my_olga_model = pgen.OlgaModel(chain_folder = 'human_T_beta', recomb_type = "VDJ")
        r = my_olga_model.compute_aa_cdr3_pgens(human_b.cdr3_b_aa,
                                                None,
                                                None)
        r = np.array(r)
        self.assertTrue(np.allclose(r, human_b.cdr3_b_aa_pgen_naive))

    def test_olga_update_to_python3_pgens_human_beta_with_vj_specified(self):
        """
        Providing Only cdr3 Beta and V J gene usage for 100 Sequence
        """
        my_olga_model = pgen.OlgaModel(chain_folder = 'human_T_beta', recomb_type = "VDJ")
        r = my_olga_model.compute_aa_cdr3_pgens(human_b.cdr3_b_aa,
                                                human_b.v_b_gene,
                                                human_b.j_b_gene)

        r = np.array(r)
        self.assertTrue(np.allclose(r, human_b.cdr3_b_aa_pgen_vj))







    def test_olga_update_to_python3_pgens_human_alpha_naive(self):
        """
        Providing Only cdr3 alpha No Gene Usage for 10 Sequences
        """
        my_olga_model = pgen.OlgaModel(chain_folder = 'human_T_alpha', recomb_type = "VJ")
        r = my_olga_model.compute_aa_cdr3_pgens(human_a.cdr3_a_aa,
                                                None,
                                                None)
        print("FOR HUMAN INSPECTION")
        for x,y in zip(human_a.cdr3_a_aa_pgen_naive, r):
            if not np.isclose(x,y):
                s = "*"
            else:
                s= ""
            print(x,y,s)
        r = np.array(r)
        self.assertTrue(np.allclose(r, human_a.cdr3_a_aa_pgen_naive))

    def test_olga_update_to_python3_pgens_human_alpha_with_vj_specified(self):
        """
        Providing cdr3 alpha and V J gene usage for 10 Sequence
        """
        my_olga_model = pgen.OlgaModel(chain_folder = 'human_T_alpha', recomb_type = "VJ")
        r = my_olga_model.compute_aa_cdr3_pgens(human_a.cdr3_a_aa,
                                                human_a.v_a_gene,
                                                human_a.j_a_gene)

        print("FOR HUMAN INSPECTION")
        for x,y in zip(human_a.cdr3_a_aa_pgen_vj, r):
            if not np.isclose(x,y):
                s = "*"
            else:
                s= ""
            print(x,y,s)
        r = np.array(r)
        self.assertTrue(np.allclose(r, human_a.cdr3_a_aa_pgen_vj))








if __name__ == '__main__':
    unittest.main()



"""
Additional Information on Environment Used For Python 2.7
pip list
Package                            Version
---------------------------------- -----------
appnope                            0.1.0
attrs                              19.1.0
backports-abc                      0.5
backports.shutil-get-terminal-size 1.0.0
bleach                             3.1.0
configparser                       3.7.4
decorator                          4.4.0
defusedxml                         0.6.0
entrypoints                        0.3
enum34                             1.1.6
functools32                        3.2.3.post2
futures                            3.2.0
ipaddress                          1.0.22
ipykernel                          4.10.0
ipython                            5.8.0
ipython-genutils                   0.2.0
Jinja2                             2.10.1
jsonschema                         3.0.1
jupyter-client                     5.2.4
jupyter-core                       4.5.0
jupyterlab                         0.33.12
jupyterlab-launcher                0.11.2
MarkupSafe                         1.1.1
mistune                            0.8.4
nbconvert                          5.5.0
nbformat                           4.4.0
notebook                           5.7.8
numpy                              1.16.4
olga                               1.0.2
pandocfilters                      1.4.2
pathlib2                           2.3.3
pexpect                            4.7.0
pickleshare                        0.7.5
pip                                19.1.1
prometheus-client                  0.7.0
prompt-toolkit                     1.0.16
ptyprocess                         0.6.0
Pygments                           2.4.2
pyrsistent                         0.15.2
python-dateutil                    2.8.0
pyzmq                              18.0.1
scandir                            1.10.0
Send2Trash                         1.5.0
setuptools                         41.0.1
simplegeneric                      0.8.1
singledispatch                     3.4.0.3
six                                1.12.0
subprocess32                       3.5.4
terminado                          0.8.2
testpath                           0.4.2
tornado                            5.1.1
traitlets                          4.3.2
wcwidth                            0.1.7
webencodings                       0.5.1
wheel                              0.33.4
"""
